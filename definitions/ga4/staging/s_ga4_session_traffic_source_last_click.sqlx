/*
  参照元情報 session_traffic_source_last_clickを取得
*/
/*
session_traffic_source_last_click追加作業手順
1.definitions/ga4/staging/s_ga4_session_traffic_source_last_click_initial.sqlxを実行してビューを作成
2.definitions/ga4/mart/m_ga4_session_traffic_source_last_click.sqlx を初期構築版に設定して実行して全期間（2024年7月以降）のテーブルを作成
3.m_ga4_event テーブル、m_ga4_sessionテーブルのバックアップを手動で作成
4.m_ga4_event テーブル、m_ga4_sessionテーブルにカラムを追加
  ALTER TABLE `molts-data-project.df_molts_ga4_mart.m_ga4_event`
  ADD COLUMN session_traffic_source_last_click STRUCT<
    manual_campaign STRUCT<
      campaign_id STRING,
      campaign_name STRING,
      source STRING,
      medium STRING,
      term STRING,
      content STRING,
      source_platform STRING,
      creative_format STRING,
      marketing_tactic STRING
    >,
    google_ads_campaign STRUCT<
      customer_id STRING,
      account_name STRING,
      campaign_id STRING,
      campaign_name STRING,
      ad_group_id STRING,
      ad_group_name STRING
    >
  > 
  OPTIONS (
    description="集客：セッションの参照元情報"
  );
5. m_ga4_event テーブル、m_ga4_sessionテーブルにm_ga4_session_traffic_source_last_clickの値を入れるために下記のクエリを実行（UPDATE文）
  definitions/ga4/mart/m_ga4_event_update.sqlx
  definitions/ga4/mart/m_ga4_session_update.sqlx
*/
config {
    type: "view",
    schema: constants.STAGING,
    description: "セッションの参照元。各セッションの最初のイベントのsession_traffic_source_last_click 値を返す",
    tags: ["daily", "source"]
}

-- 通常実行用
with events AS(
    SELECT * EXCEPT(user_id),
    FIRST_VALUE(user_id IGNORE NULLS)OVER(PARTITION BY event_date, user_pseudo_id, ga_session_id ORDER BY event_timestamp, event_name) AS user_id
    FROM ${ref("s_ga4_events_event_update")} 
),sources AS(
  SELECT 
  *,
  FROM(
    SELECT 
      event_date,
      user_pseudo_id,
      ga_session_id,
      ARRAY_AGG(STRUCT(
        user_id,
        session_traffic_source_last_click,
        is_fixed_data
      ) ORDER BY event_timestamp ASC LIMIT 1)[OFFSET(0)].*
    FROM events
--    WHERE event_name = 'session_start'
    GROUP BY ALL
  )
)
SELECT DISTINCT *
FROM sources

-- m_ga4_eventやm_ga4_sessionテーブルの過去分はすでに取り込み済みで、m_ga4_session_traffic_source_last_clickテーブルだけを新規に作成したい場合は下記だけを実行する
/*
with d AS(
	SELECT 
	  SUBSTR(table_name, 8, 8) AS event_date 
	FROM `${constants.GA4_DATABASE}.region-xx.INFORMATION_SCHEMA.COLUMNS` -- GA4のevntsテーブルのリージョンを確認して要変更（例：region-us）
	WHERE 
	  column_name = 'session_traffic_source_last_click'
	  AND table_name LIKE 'events_%'
	ORDER BY 
	event_date
	LIMIT 1
)
,event_base AS(
  SELECT
    PARSE_DATE("%Y%m%d", event_date) AS event_date,
    (SELECT COALESCE(value.string_value, SAFE_CAST(value.int_value AS STRING), SAFE_CAST(value.double_value AS STRING)) FROM UNNEST(event_params) WHERE key = 'ga_session_id') AS ga_session_id,
    COALESCE(user_id, (SELECT value.string_value AS user_id FROM UNNEST(user_properties) WHERE key = 'user_id'), (SELECT value.string_value AS user_id FROM UNNEST(event_params) WHERE key = 'user_id')) AS user_id,
    IF(event_date <= FORMAT_DATE("%Y%m%d", DATE_SUB(CURRENT_DATE('Asia/Tokyo'), INTERVAL 5 DAY)),TRUE,FALSE) AS is_fixed_data,
    * EXCEPT(event_date,user_id),
  FROM `${constants.GA4_DATABASE}.${constants.GA4_DATASET}.events_*`
  WHERE _table_suffix >= (SELECT event_date FROM d)
  AND _table_suffix >= '20240701' -- コスト削減目的（session_traffic_source_last_clickが導入されたのが2024年7月以降なため）
),events AS(
  SELECT * EXCEPT(user_id),
    FIRST_VALUE(user_id IGNORE NULLS)OVER(PARTITION BY event_date, user_pseudo_id, ga_session_id ORDER BY event_timestamp, event_name) AS user_id,
  FROM event_base
),sources AS(
  SELECT *
  FROM(
    SELECT
        event_date,
        user_pseudo_id,
        ga_session_id,
        ARRAY_AGG(STRUCT(
          user_id,
          STRUCT(session_traffic_source_last_click.manual_campaign,session_traffic_source_last_click.google_ads_campaign) AS session_traffic_source_last_click,
--          session_traffic_source_last_click,
          is_fixed_data
        ) ORDER BY event_timestamp ASC LIMIT 1)[OFFSET(0)].*
    FROM events
    GROUP BY ALL
  )
)
SELECT DISTINCT *
FROM sources
*/
